From dd6a53be3e5671d7c0e7a4bb00fd83107854b08d Mon Sep 17 00:00:00 2001
From: WJXXBSH <zyb_1998@outlook.com>
Date: Sat, 16 Jan 2021 20:37:29 +0800
Subject: [PATCH] Forwardport addon-su from lineage-16.0

Change-Id: Ib3e0991ecd6c56370c753f5de2d532964bfe3f0a
---
 res/values-zh-rCN/cm_strings.xml              |  2 +
 res/values/cm_strings.xml                     |  4 ++
 res/xml/development_settings.xml              |  6 ++
 .../AdbRootPreferenceController.java          |  2 +-
 .../DevelopmentSettingsDashboardFragment.java |  1 +
 .../RootAccessPreferenceController.java       | 61 +++++++++++++++++++
 6 files changed, 75 insertions(+), 1 deletion(-)
 create mode 100644 src/com/android/settings/development/RootAccessPreferenceController.java

diff --git a/res/values-zh-rCN/cm_strings.xml b/res/values-zh-rCN/cm_strings.xml
index d84f2db..a2b6754 100644
--- a/res/values-zh-rCN/cm_strings.xml
+++ b/res/values-zh-rCN/cm_strings.xml
@@ -62,6 +62,8 @@
     <string name="volume_link_notification_title">链接铃声和通知的音量</string>
     <string name="directly_show_lock">直接解锁</string>
     <string name="directly_show_lock_summary">跳过滑动解锁屏幕直接开始输入密码</string>
+    <string name="root_access">Root 授权</string>
+    <string name="root_access_summary">允许所有应用获取 Root 权限</string>
     <string name="security_settings_fingerprint_enroll_find_sensor_message_cm" product="tablet">在您平板的 <xliff:g id="sensor_location">%1$s</xliff:g> 找到指纹传感器。</string>
     <string name="security_settings_fingerprint_enroll_find_sensor_message_cm" product="device">在您设备的 <xliff:g id="sensor_location">%1$s</xliff:g> 找到指纹传感器。</string>
     <string name="security_settings_fingerprint_enroll_find_sensor_message_cm" product="default">在您手机的 <xliff:g id="sensor_location">%1$s</xliff:g> 找到指纹传感器。</string>
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 959d8be..bb0c71b 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -144,6 +144,10 @@
     <string name="proximity_wake_title">Prevent accidental wake-up</string>
     <string name="proximity_wake_summary">Check the proximity sensor prior to waking up screen</string>

+    <!-- Setting checkbox title for root access -->
+    <string name="root_access">Root access</string>
+    <string name="root_access_summary">Allow all apps to get root access</string>
+
     <!-- Wake on plug -->
     <string name="wake_when_plugged_or_unplugged_title">Wake on plug</string>
     <string name="wake_when_plugged_or_unplugged_summary">Turn the screen on when connecting or disconnecting a power source</string>
diff --git a/res/xml/development_settings.xml b/res/xml/development_settings.xml
index 0262556..941c3f2 100644
--- a/res/xml/development_settings.xml
+++ b/res/xml/development_settings.xml
@@ -126,6 +126,12 @@
             android:fragment="com.android.settings.development.qstile.DevelopmentTileConfigFragment"
             settings:searchable="false" />

+        <SwitchPreference
+            android:key="root_access"
+            android:title="@string/root_access"
+            android:summary="@string/root_access_summary"
+            android:persistent="false" />
+
     <!-- Configure trust agent behavior -->
     <SwitchPreference
         android:key="security_setting_trust_agents_extend_unlock"
diff --git a/src/com/android/settings/development/AdbRootPreferenceController.java b/src/com/android/settings/development/AdbRootPreferenceController.java
index 5f7d65d..8cdc24f 100644
--- a/src/com/android/settings/development/AdbRootPreferenceController.java
+++ b/src/com/android/settings/development/AdbRootPreferenceController.java
@@ -53,7 +53,7 @@ public class AdbRootPreferenceController extends DeveloperOptionsPreferenceContr

     @Override
     public boolean isAvailable() {
-        return Build.IS_DEBUGGABLE;
+        return true;
     }

     @Override
diff --git a/src/com/android/settings/development/DevelopmentSettingsDashboardFragment.java b/src/com/android/settings/development/DevelopmentSettingsDashboardFragment.java
index f18225e..d22e7d0 100644
--- a/src/com/android/settings/development/DevelopmentSettingsDashboardFragment.java
+++ b/src/com/android/settings/development/DevelopmentSettingsDashboardFragment.java
@@ -515,6 +515,7 @@ public class DevelopmentSettingsDashboardFragment extends RestrictedDashboardFra
         controllers.add(new ShortcutManagerThrottlingPreferenceController(context));
         controllers.add(new BubbleGlobalPreferenceController(context));
         controllers.add(new EnableGnssRawMeasFullTrackingPreferenceController(context));
+        controllers.add(new RootAccessPreferenceController(context));
         controllers.add(new DefaultLaunchPreferenceController(context, "running_apps"));
         controllers.add(new DefaultLaunchPreferenceController(context, "demo_mode"));
         controllers.add(new DefaultLaunchPreferenceController(context, "quick_settings_tiles"));
diff --git a/src/com/android/settings/development/RootAccessPreferenceController.java b/src/com/android/settings/development/RootAccessPreferenceController.java
new file mode 100644
index 0000000..03bb3cd
--- /dev/null
+++ b/src/com/android/settings/development/RootAccessPreferenceController.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright (C) 2020 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.development;
+
+import android.content.Context;
+import android.os.SystemProperties;
+
+import androidx.preference.Preference;
+import androidx.preference.PreferenceScreen;
+import androidx.preference.SwitchPreference;
+
+import com.android.settings.core.PreferenceControllerMixin;
+import com.android.settingslib.development.DeveloperOptionsPreferenceController;
+
+
+public class RootAccessPreferenceController extends DeveloperOptionsPreferenceController implements Preference.OnPreferenceChangeListener, PreferenceControllerMixin {
+    private static final String ROOT_ACCESS_KEY = "root_access";
+    private static final String ROOT_ACCESS_PROPERTY = "persist.sys.root_access";
+
+    public RootAccessPreferenceController(Context context) {
+        super(context);
+    }
+
+    @Override
+    public String getPreferenceKey() {
+        return ROOT_ACCESS_KEY;
+    }
+
+    @Override
+    public void displayPreference(PreferenceScreen screen) {
+        super.displayPreference(screen);
+        ((SwitchPreference) mPreference).setChecked(SystemProperties.getBoolean(ROOT_ACCESS_PROPERTY, false));
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        SystemProperties.set(ROOT_ACCESS_PROPERTY, (Boolean) newValue ? "true" : "false");
+        return true;
+    }
+
+    @Override
+    protected void onDeveloperOptionsSwitchDisabled() {
+        super.onDeveloperOptionsSwitchDisabled();
+        SystemProperties.set(ROOT_ACCESS_PROPERTY, "false");
+        ((SwitchPreference) mPreference).setChecked(false);
+    }
+}
--
2.30.0
